service: auth-service
frameworkVersion: "3"

plugins:
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs18.x
  httpApi:
    cors: true
  environment:
    AUTH_TABLE: auth
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
          Resource:
            - arn:aws:dynamodb:us-east-1:626567425764:table/auth

functions:
  register:
    handler: registration/handler.register
    events:
      - http:
          path: auth/register
          method: POST
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Auth-Token
              - X-Auth-Email
          request:
            schemas:
              application/json: ${file(models/registration.json)}
  login:
    handler: login/handler.login
    events:
      - http:
          path: auth/login
          method: POST
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Auth-Token
              - X-Auth-Email
          request:
            schemas:
              application/json: ${file(models/login.json)}
  logout:
    handler: logout/handler.logout
    events:
      - http:
          path: auth/logout
          method: GET
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Auth-Token
              - X-Auth-Email

resources:
  Resources:
    AuthTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: auth
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    ApiGatewayRestApi:
      Type: "AWS::ApiGateway::RestApi"
      Properties:
        Name: "auth-service"
    GatewayResponseDefault4XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: "DEFAULT_4XX"
        RestApiId:
          Ref: "ApiGatewayRestApi"
      